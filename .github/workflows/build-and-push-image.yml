name: build-and-push-image
run-name: Build and Push Container image to Amazon ECR

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag'
        default: ''
        required: true
        type: string

jobs:
  set-vars:
    runs-on: ubuntu-latest

    # Configuration for dependent jobs to use ${{ needs.set-vars.outputs.tag }}
    outputs:
      tag: ${{ steps.set-vars.outputs.tag }}

    steps:
      - name: Set Variables Based on Event
        id: set-vars
        # Configuration for the set-vars job to produce "${{ steps.set-vars.outputs.tag }}"
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            tag=${GITHUB_REF#refs/tags/}
            echo "tag=${tag}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            tag=${{ inputs.tag }}
            echo "tag=${{ inputs.tag }}" >> $GITHUB_OUTPUT
          fi
          echo "tag=${tag}"

  build-and-push-php-image:
    name: Build and Push PHP Image
    runs-on: ubuntu-latest
    needs: set-vars
    environment: production
    permissions:
      # This is used to Login to Amazon ECR with OIDC
      # @see https://github.com/aws-actions/configure-aws-credentials?tab=readme-ov-file#oidc
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Build and push PHP image
        uses: ./.github/actions/build-and-push-image-to-ecr
        with:
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_REGISTRY: ${{ secrets.AWS_REGISTRY }}
          IMAGE_NAME: webapp-php
          IMAGE_TAG: ${{ needs.set-vars.outputs.tag }}
          DOCKER_FILE_PATH: ./docker/php-fpm/Dockerfile

  build-and-push-nginx-image:
    name: Build and Push NGINX Image
    runs-on: ubuntu-latest
    needs: set-vars
    environment: production
    permissions:
      # This is used to Login to Amazon ECR with OIDC
      # @see https://github.com/aws-actions/configure-aws-credentials?tab=readme-ov-file#oidc
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and push NGINX image
        uses: ./.github/actions/build-and-push-image-to-ecr
        with:
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_REGISTRY: ${{ secrets.AWS_REGISTRY }}
          IMAGE_NAME: webapp-nginx
          IMAGE_TAG: ${{ needs.set-vars.outputs.tag }}
          DOCKER_FILE_PATH: ./docker/nginx/Dockerfile

  update-image-tag:
    name: Update image tag in manifests
    runs-on: ubuntu-latest
    needs: 
      - set-vars
      - build-and-push-php-image
      - build-and-push-nginx-image

    env:
      MANIFESTS_REPO: webapp-sample-php-manifests

    steps:
      - name: Generate GitHub Apps token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.AUTO_MERGE_BOT_APP_ID }}
          private-key: ${{ secrets.AUTO_MERGE_BOT_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: ${{ env.MANIFESTS_REPO }}
          
      - name: Run a workflow to replace the image tag in the manifests repository
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh workflow run replace-image-tag-and-lint-and-automerge.yaml \
            --repo ${{ github.repository_owner }}/${{ env.MANIFESTS_REPO }} \
            -f tag=${{ needs.set-vars.outputs.tag }}
